#include "TechUI.hpp"
#include <iomanip>
#include <sstream>

TechUI::TechUI(const std::string& connectionString) {
    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
        dbConnection_ = std::make_shared<DatabaseConnection>(connectionString);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
        auto clientRepo = std::make_unique<PostgreSQLClientRepository>(dbConnection_);
        auto hallRepo = std::make_unique<PostgreSQLHallRepository>(dbConnection_);
        auto bookingRepo = std::make_unique<PostgreSQLBookingRepository>(dbConnection_);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
        bookingService_ = std::make_unique<BookingService>(
            std::move(bookingRepo),
            std::move(clientRepo),
            std::move(hallRepo)
        );
        
        std::cout << "‚úÖ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π UI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω" << std::endl;
        
    } catch (const std::exception& e) {
        std::cerr << "‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: " << e.what() << std::endl;
        throw;
    }
}

void TechUI::run() {
    std::cout << "=== –¢–ï–•–ù–û–õ–û–ì–ò–ß–ï–°–ö–ò–ô UI –¢–ê–ù–¶–ï–í–ê–õ–¨–ù–û–ô –°–¢–£–î–ò–ò ===" << std::endl;
    std::cout << "–°–∏—Å—Ç–µ–º–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏" << std::endl;
    
    while (true) {
        displayMainMenu();
        
        int choice;
        std::cout << "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: ";
        std::cin >> choice;
        std::cin.ignore(); // –û—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞
        
        switch (choice) {
            case 1: handleClientManagement(); break;
            case 2: handleHallManagement(); break;
            case 3: handleBookingManagement(); break;
            case 4: handleSubscriptionManagement(); break;
            case 5: handleLessonManagement(); break;
            case 0: 
                std::cout << "–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã..." << std::endl;
                return;
            default:
                std::cout << "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞." << std::endl;
        }
    }
}

void TechUI::displayMainMenu() {
    std::cout << "\n=== –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ===" << std::endl;
    std::cout << "1. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏" << std::endl;
    std::cout << "2. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ª–∞–º–∏" << std::endl;
    std::cout << "3. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏" << std::endl;
    std::cout << "4. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞–º–∏" << std::endl;
    std::cout << "5. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è–º–∏" << std::endl;
    std::cout << "0. –í—ã—Ö–æ–¥" << std::endl;
}

void TechUI::handleClientManagement() {
    while (true) {
        std::cout << "\n=== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–õ–ò–ï–ù–¢–ê–ú–ò ===" << std::endl;
        std::cout << "1. –°–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞" << std::endl;
        std::cout << "2. –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤" << std::endl;
        std::cout << "3. –ù–∞–π—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ ID" << std::endl;
        std::cout << "0. –ù–∞–∑–∞–¥" << std::endl;
        
        int choice;
        std::cout << "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: ";
        std::cin >> choice;
        std::cin.ignore();
        
        switch (choice) {
            case 1: createClient(); break;
            case 2: listClients(); break;
            case 3: findClientById(); break;
            case 0: return;
            default: std::cout << "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä." << std::endl;
        }
    }
}

void TechUI::handleHallManagement() {
    while (true) {
        std::cout << "\n=== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–õ–ê–ú–ò ===" << std::endl;
        std::cout << "1. –°–æ–∑–¥–∞—Ç—å –∑–∞–ª" << std::endl;
        std::cout << "2. –°–ø–∏—Å–æ–∫ –∑–∞–ª–æ–≤" << std::endl;
        std::cout << "3. –ù–∞–π—Ç–∏ –∑–∞–ª –ø–æ ID" << std::endl;
        std::cout << "0. –ù–∞–∑–∞–¥" << std::endl;
        
        int choice;
        std::cout << "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: ";
        std::cin >> choice;
        std::cin.ignore();
        
        switch (choice) {
            case 1: createHall(); break;
            case 2: listHalls(); break;
            case 3: findHallById(); break;
            case 0: return;
            default: std::cout << "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä." << std::endl;
        }
    }
}

void TechUI::handleBookingManagement() {
    while (true) {
        std::cout << "\n=== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø–ú–ò ===" << std::endl;
        std::cout << "1. –°–æ–∑–¥–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" << std::endl;
        std::cout << "2. –°–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π" << std::endl;
        std::cout << "3. –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" << std::endl;
        std::cout << "4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏" << std::endl;
        std::cout << "0. –ù–∞–∑–∞–¥" << std::endl;
        
        int choice;
        std::cout << "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: ";
        std::cin >> choice;
        std::cin.ignore();
        
        switch (choice) {
            case 1: createBooking(); break;
            case 2: listBookings(); break;
            case 3: cancelBooking(); break;
            case 4: checkTimeSlotAvailability(); break;
            case 0: return;
            default: std::cout << "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä." << std::endl;
        }
    }
}

void TechUI::handleSubscriptionManagement() {
    std::cout << "\n=== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ê–ë–û–ù–ï–ú–ï–ù–¢–ê–ú–ò ===" << std::endl;
    std::cout << "üöß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

void TechUI::handleLessonManagement() {
    std::cout << "\n=== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–ù–Ø–¢–ò–Ø–ú–ò ===" << std::endl;
    std::cout << "üöß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

// –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏
void TechUI::createClient() {
    std::cout << "\n--- –°–û–ó–î–ê–ù–ò–ï –ö–õ–ò–ï–ù–¢–ê ---" << std::endl;
    std::cout << "üöß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

void TechUI::listClients() {
    std::cout << "\n--- –°–ü–ò–°–û–ö –ö–õ–ò–ï–ù–¢–û–í ---" << std::endl;
    std::cout << "üìã –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

void TechUI::findClientById() {
    std::cout << "\n--- –ü–û–ò–°–ö –ö–õ–ò–ï–ù–¢–ê –ü–û ID ---" << std::endl;
    std::cout << "üöß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

// –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–ª–∞–º–∏
void TechUI::createHall() {
    std::cout << "\n--- –°–û–ó–î–ê–ù–ò–ï –ó–ê–õ–ê ---" << std::endl;
    std::cout << "üöß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

void TechUI::listHalls() {
    std::cout << "\n--- –°–ü–ò–°–û–ö –ó–ê–õ–û–í ---" << std::endl;
    std::cout << "üìã –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

void TechUI::findHallById() {
    std::cout << "\n--- –ü–û–ò–°–ö –ó–ê–õ–ê –ü–û ID ---" << std::endl;
    std::cout << "üöß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

// –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏
void TechUI::createBooking() {
    try {
        std::cout << "\n--- –°–û–ó–î–ê–ù–ò–ï –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø ---" << std::endl;
        std::cout << "üöß –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–µ–∂–∏–º" << std::endl;
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        UUID clientId = UUID::generate();
        UUID hallId = UUID::generate();
        
        auto startTime = std::chrono::system_clock::now() + std::chrono::hours(1);
        TimeSlot timeSlot(startTime, 120);
        
        std::cout << "–°–æ–∑–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:" << std::endl;
        std::cout << "- Client ID: " << clientId.toString() << std::endl;
        std::cout << "- Hall ID: " << hallId.toString() << std::endl;
        std::cout << "- –í—Ä–µ–º—è: —á–µ—Ä–µ–∑ 1 —á–∞—Å –Ω–∞ 120 –º–∏–Ω—É—Ç" << std::endl;
        std::cout << "- –¶–µ–ª—å: —Ç–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" << std::endl;
        
        std::cout << "‚úÖ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω" << std::endl;
        
    } catch (const std::exception& e) {
        std::cerr << "‚ùå –û—à–∏–±–∫–∞: " << e.what() << std::endl;
    }
    
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

void TechUI::listBookings() {
    std::cout << "\n--- –°–ü–ò–°–û–ö –ë–†–û–ù–ò–†–û–í–ê–ù–ò–ô ---" << std::endl;
    std::cout << "üìã –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

void TechUI::cancelBooking() {
    std::cout << "\n--- –û–¢–ú–ï–ù–ê –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø ---" << std::endl;
    std::cout << "üöß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

void TechUI::checkTimeSlotAvailability() {
    std::cout << "\n--- –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –í–†–ï–ú–ï–ù–ò ---" << std::endl;
    std::cout << "üöß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

// –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–Ω—è—Ç–∏—è–º–∏
void TechUI::createLesson() {
    std::cout << "\n--- –°–û–ó–î–ê–ù–ò–ï –ó–ê–ù–Ø–¢–ò–Ø ---" << std::endl;
    std::cout << "üöß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

void TechUI::listLessons() {
    std::cout << "\n--- –°–ü–ò–°–û–ö –ó–ê–ù–Ø–¢–ò–ô ---" << std::endl;
    std::cout << "üìã –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ" << std::endl;
    std::cout << "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
    std::cin.get();
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
UUID TechUI::readUUID(const std::string& prompt) { 
    std::cout << prompt;
    std::string input;
    std::getline(std::cin, input);
    try {
        return UUID::fromString(input);
    } catch (const std::exception&) {
        std::cout << "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç UUID, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π: ";
        UUID newUuid = UUID::generate();
        std::cout << newUuid.toString() << std::endl;
        return newUuid;
    }
}

std::string TechUI::readString(const std::string& prompt) { 
    std::string result;
    std::cout << prompt;
    std::getline(std::cin, result);
    return result;
}

int TechUI::readInt(const std::string& prompt) { 
    std::cout << prompt;
    int result;
    std::cin >> result;
    std::cin.ignore();
    return result;
}

TimeSlot TechUI::readTimeSlot() { 
    auto now = std::chrono::system_clock::now();
    int duration = 60; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 60 –º–∏–Ω—É—Ç
    return TimeSlot(now, duration);
}