#include <Wt/WServer.h>
#include <iostream>
#include <filesystem>
#include "web_ui/WebApplication.hpp"

namespace fs = std::filesystem;

int main(int argc, char** argv) {
    try {
        // –°–æ–∑–¥–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Å docroot
        std::vector<const char*> args;
        args.push_back(argv[0]); // –∏–º—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä docroot - —É–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        args.push_back("--docroot");
        args.push_back(".");
        
        // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Ä—Ç
        args.push_back("--http-port");
        args.push_back("8080");
        
        // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –∞–¥—Ä–µ—Å
        args.push_back("--http-address");
        args.push_back("0.0.0.0");
        
        // –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Å –Ω–∞—à–∏–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
        Wt::WServer server(args.size(), const_cast<char**>(args.data()));
        
        server.addEntryPoint(Wt::EntryPointType::Application, 
            [](const Wt::WEnvironment& env) {
                return std::make_unique<WebApplication>(env);
            });
        
        std::cout << "üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: http://localhost:8080" << std::endl;
        std::cout << "üìÅ DocRoot: " << fs::current_path().string() << std::endl;
        
        if (server.start()) {
            Wt::WServer::waitForShutdown();
            server.stop();
        }
        
        return 0;
    } catch (const std::exception& e) {
        std::cerr << "üí• –û—à–∏–±–∫–∞: " << e.what() << std::endl;
        return 1;
    }
}