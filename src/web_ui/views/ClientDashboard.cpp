#include "ClientDashboard.hpp"
#include "web_ui/WebApplication.hpp"
#include <iostream>

ClientDashboard::ClientDashboard(WebApplication* app) 
    : app_(app) {
    
    setupUI();
}

void ClientDashboard::setupUI() {
    setStyleClass("dashboard-container");
    
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    std::string userName = app_->getUserSession().getUserName();
    std::string welcomeText = "<h1>üåü –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨, " + (userName.empty() ? "–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨" : userName) + "! üåü</h1>";
    auto title = addNew<Wt::WText>(welcomeText);
    title->setStyleClass("dashboard-title");
    
    // –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
    auto subtitle = addNew<Wt::WText>("<p>–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏ –∏ –∑–∞–Ω—è—Ç–∏—è–º–∏</p>");
    subtitle->setStyleClass("dashboard-subtitle");
    
    // –ü—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é
    auto menu = addNew<Wt::WContainerWidget>();
    menu->setStyleClass("dashboard-menu");
    
    // –ö–Ω–æ–ø–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
    auto bookingBtn = menu->addNew<Wt::WPushButton>("üèüÔ∏è –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ª–æ–≤");
    bookingBtn->setStyleClass("btn-menu");
    bookingBtn->clicked().connect([this]() {
        app_->showBookingView();
    });

    auto lessonsBtn = menu->addNew<Wt::WPushButton>("üéì –ú–æ–∏ –∑–∞–Ω—è—Ç–∏—è");
    lessonsBtn->setStyleClass("btn-menu");
    lessonsBtn->clicked().connect([this]() {
        app_->showLessonView();
    });

    // –ö–Ω–æ–ø–∫–∞ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤
    auto subscriptionBtn = menu->addNew<Wt::WPushButton>("üé´ –ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã");
    subscriptionBtn->setStyleClass("btn-menu");
    subscriptionBtn->clicked().connect([this]() {
        app_->showSubscriptionView();
    });
    
    std::vector<std::string> buttons = {
        "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
        "‚≠ê –û—Ç–∑—ã–≤—ã"
    };
    
    for (const auto& text : buttons) {
        auto btn = menu->addNew<Wt::WPushButton>(text);
        btn->setStyleClass("btn-menu");
        
        btn->clicked().connect([text]() {
            std::cout << "üéØ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: " << text << std::endl;
        });
    }
    
    // –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
    auto logoutBtn = addNew<Wt::WPushButton>("üö™ –í—ã–π—Ç–∏");
    logoutBtn->setStyleClass("btn-logout");
    logoutBtn->clicked().connect([this]() {
        app_->logoutUser();
    });
    
    std::cout << "‚úÖ –î–∞—à–±–æ—Ä–¥ —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " << userName << std::endl;
}