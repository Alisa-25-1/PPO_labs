#include "LessonView.hpp"
#include "../WebApplication.hpp"
#include "LessonScheduleWidget.hpp"
#include "MyEnrollmentsWidget.hpp"
#include "EnrollmentHistoryWidget.hpp"
#include <Wt/WPushButton.h>
#include <Wt/WText.h>
#include <iostream>

LessonView::LessonView(WebApplication* app) 
    : app_(app),
      contentStack_(nullptr),
      menuWidget_(nullptr),
      scheduleWidget_(nullptr),
      myEnrollmentsWidget_(nullptr),
      historyWidget_(nullptr) {
    
    std::cout << "üîß –°–æ–∑–¥–∞–Ω–∏–µ LessonView..." << std::endl;
    setupUI();
    std::cout << "‚úÖ LessonView —Å–æ–∑–¥–∞–Ω" << std::endl;
}

void LessonView::setupUI() {
    std::cout << "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI LessonView..." << std::endl;
    
    setStyleClass("lesson-view");
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫
    auto header = addNew<Wt::WContainerWidget>();
    header->setStyleClass("lesson-header");
    auto title = header->addNew<Wt::WText>("<h1>üéì –ú–æ–∏ –∑–∞–Ω—è—Ç–∏—è</h1>");
    title->setTextFormat(Wt::TextFormat::UnsafeXHTML);
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é
    auto nav = addNew<Wt::WContainerWidget>();
    nav->setStyleClass("lesson-nav");
    
    auto scheduleBtn = nav->addNew<Wt::WPushButton>("üìÖ –ó–∞–ø–∏—Å—å –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ");
    scheduleBtn->setStyleClass("btn-nav");
    scheduleBtn->clicked().connect(this, &LessonView::showSchedule);
    
    auto enrollmentsBtn = nav->addNew<Wt::WPushButton>("üìã –ú–æ–∏ –∑–∞–ø–∏—Å–∏");
    enrollmentsBtn->setStyleClass("btn-nav");
    enrollmentsBtn->clicked().connect(this, &LessonView::showMyEnrollments);
    
    auto historyBtn = nav->addNew<Wt::WPushButton>("üìä –ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–µ—â–µ–Ω–∏–π");
    historyBtn->setStyleClass("btn-nav");
    historyBtn->clicked().connect(this, &LessonView::showEnrollmentHistory);
    
    auto backBtn = nav->addNew<Wt::WPushButton>("‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é");
    backBtn->setStyleClass("btn-nav btn-back");
    backBtn->clicked().connect([this]() {
        app_->showDashboard();
    });
    
    // –ö–æ–Ω—Ç–µ–Ω—Ç
    contentStack_ = addNew<Wt::WStackedWidget>();
    contentStack_->setStyleClass("lesson-content");
    
    std::cout << "üîß –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤ LessonView..." << std::endl;
    
    // –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∂–µ—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ
    menuWidget_ = contentStack_->addNew<Wt::WContainerWidget>();
    scheduleWidget_ = contentStack_->addNew<LessonScheduleWidget>(app_);
    myEnrollmentsWidget_ = contentStack_->addNew<MyEnrollmentsWidget>(app_);
    historyWidget_ = contentStack_->addNew<EnrollmentHistoryWidget>(app_);
    
    std::cout << "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é LessonView..." << std::endl;
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–µ–Ω—é
    menuWidget_->setStyleClass("lesson-welcome");
    menuWidget_->addNew<Wt::WText>("<h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω—è—Ç–∏–π!</h2>")->setTextFormat(Wt::TextFormat::UnsafeXHTML);
    menuWidget_->addNew<Wt::WText>("<p>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –≤—ã—à–µ</p>")->setTextFormat(Wt::TextFormat::UnsafeXHTML);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    showLessonMenu();
    
    std::cout << "‚úÖ UI LessonView –Ω–∞—Å—Ç—Ä–æ–µ–Ω" << std::endl;
}

void LessonView::showLessonMenu() {
    std::cout << "üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –∑–∞–Ω—è—Ç–∏–π" << std::endl;
    if (contentStack_ && menuWidget_) {
        contentStack_->setCurrentWidget(menuWidget_);
    }
}

void LessonView::showSchedule() {
    std::cout << "üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π" << std::endl;
    if (contentStack_ && scheduleWidget_) {
        contentStack_->setCurrentWidget(scheduleWidget_);
    }
}

void LessonView::showMyEnrollments() {
    std::cout << "üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–∏ –∑–∞–ø–∏—Å–∏" << std::endl;
    if (contentStack_ && myEnrollmentsWidget_) {
        myEnrollmentsWidget_->loadEnrollments();
        contentStack_->setCurrentWidget(myEnrollmentsWidget_);
    }
}

void LessonView::showEnrollmentHistory() {
    std::cout << "üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–µ—â–µ–Ω–∏–π" << std::endl;
    if (contentStack_ && historyWidget_) {
        historyWidget_->loadHistory();
        contentStack_->setCurrentWidget(historyWidget_);
    }
}