#include "SubscriptionView.hpp"
#include "../WebApplication.hpp"
#include "SubscriptionListWidget.hpp"
#include "PurchaseSubscriptionWidget.hpp"
#include <Wt/WPushButton.h>
#include <Wt/WText.h>
#include <iostream>

SubscriptionView::SubscriptionView(WebApplication* app) 
    : app_(app),
      contentStack_(nullptr),
      menuWidget_(nullptr),
      listWidget_(nullptr),
      purchaseWidget_(nullptr) {
    
    std::cout << "üîß –°–æ–∑–¥–∞–Ω–∏–µ SubscriptionView..." << std::endl;
    setupUI();
    std::cout << "‚úÖ SubscriptionView —Å–æ–∑–¥–∞–Ω" << std::endl;
}

void SubscriptionView::setupUI() {
    std::cout << "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI SubscriptionView..." << std::endl;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ–≥–æ view
    setStyleClass("subscription-view");
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫
    auto header = addNew<Wt::WContainerWidget>();
    header->setStyleClass("subscription-header");
    auto title = header->addNew<Wt::WText>("<h1>üé´ –ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã</h1>");
    title->setTextFormat(Wt::TextFormat::UnsafeXHTML);
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é
    auto nav = addNew<Wt::WContainerWidget>();
    nav->setStyleClass("subscription-nav");
    
    auto purchaseBtn = nav->addNew<Wt::WPushButton>("üõí –ö—É–ø–∏—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç");
    purchaseBtn->setStyleClass("btn-nav");
    purchaseBtn->clicked().connect(this, &SubscriptionView::showPurchaseSubscription);
    
    auto listBtn = nav->addNew<Wt::WPushButton>("üìã –ú–æ–∏ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—ã");
    listBtn->setStyleClass("btn-nav");
    listBtn->clicked().connect(this, &SubscriptionView::showMySubscriptions);
    
    auto backBtn = nav->addNew<Wt::WPushButton>("‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é");
    backBtn->setStyleClass("btn-nav btn-back");
    backBtn->clicked().connect([this]() {
        app_->showDashboard();
    });
    
    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç - —Ü–µ–Ω—Ç—Ä–∏—Ä—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    auto contentContainer = addNew<Wt::WContainerWidget>();
    contentContainer->setStyleClass("subscription-content");
    
    // –°—Ç–µ–∫ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–Ω—É—Ç—Ä–∏ —Ü–µ–Ω—Ç—Ä–∏—Ä—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    contentStack_ = contentContainer->addNew<Wt::WStackedWidget>();
    contentStack_->setStyleClass("subscription-content-stack");
    
    std::cout << "üîß –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤ SubscriptionView..." << std::endl;
    
    // –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∂–µ—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ
    menuWidget_ = contentStack_->addNew<Wt::WContainerWidget>();
    listWidget_ = contentStack_->addNew<SubscriptionListWidget>(app_);
    purchaseWidget_ = contentStack_->addNew<PurchaseSubscriptionWidget>(app_);

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–ª–±—ç–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É
    purchaseWidget_->setBackToListCallback([this]() {
        showMySubscriptions();
    });
    
    std::cout << "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é SubscriptionView..." << std::endl;
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–µ–Ω—é
    menuWidget_->setStyleClass("subscription-welcome");
    auto welcomeTitle = menuWidget_->addNew<Wt::WText>("<h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞–º–∏!</h2>");
    welcomeTitle->setTextFormat(Wt::TextFormat::UnsafeXHTML);
    auto welcomeText = menuWidget_->addNew<Wt::WText>("<p>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –≤—ã—à–µ</p>");
    welcomeText->setTextFormat(Wt::TextFormat::UnsafeXHTML);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    showSubscriptionMenu();
    
    std::cout << "‚úÖ UI SubscriptionView –Ω–∞—Å—Ç—Ä–æ–µ–Ω" << std::endl;
}

void SubscriptionView::showSubscriptionMenu() {
    std::cout << "üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤" << std::endl;
    if (contentStack_ && menuWidget_) {
        contentStack_->setCurrentWidget(menuWidget_);
    }
}

void SubscriptionView::showMySubscriptions() {
    std::cout << "üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤" << std::endl;
    if (contentStack_ && listWidget_) {
        listWidget_->loadSubscriptions();
        contentStack_->setCurrentWidget(listWidget_);
    }
}

void SubscriptionView::showPurchaseSubscription() {
    std::cout << "üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–∫—É–ø–∫—É –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞" << std::endl;
    if (contentStack_ && purchaseWidget_) {
        purchaseWidget_->loadSubscriptionTypes();
        contentStack_->setCurrentWidget(purchaseWidget_);
    }
}